<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ethan King - Python</title><link href="https://ethan-king.github.io/" rel="alternate"></link><link href="https://ethan-king.github.io/feeds/python.atom.xml" rel="self"></link><id>https://ethan-king.github.io/</id><updated>2021-02-19T11:00:00-05:00</updated><entry><title>Intro to Pelican and Github Pages</title><link href="https://ethan-king.github.io/getting-started-pelican.html" rel="alternate"></link><published>2021-02-19T11:00:00-05:00</published><updated>2021-02-19T11:00:00-05:00</updated><author><name>Ethan King</name></author><id>tag:ethan-king.github.io,2021-02-19:/getting-started-pelican.html</id><summary type="html">&lt;p&gt;Summarizing the Pelican project&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've always liked the idea of hosting a website for free on &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;. Having a 
preference for Python, I decided to use &lt;a href="https://docs.getpelican.com/en/latest/"&gt;Pelican&lt;/a&gt; for the static website 
generation. I like the idea of using &lt;a href="https://www.markdownguide.org/basic-syntax/"&gt;markdown&lt;/a&gt; to generate content. A 
healthy &lt;a href="http://www.pelicanthemes.com/"&gt;theme selection&lt;/a&gt; to choose from, and using Github for deployment makes pushing 
changes a one-line command with 'make github'. This is a guide on hosting a static website on 
Github pages using Python, Pelican, and of course, Git. &lt;/p&gt;
&lt;h2&gt;Setting up the environment&lt;/h2&gt;
&lt;p&gt;Start off the project with creating the project directory. Having multiple directories will help organize the website 
content and any themes you wish to use. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir github_pages
&lt;span class="nb"&gt;cd&lt;/span&gt; github_pages
mkdir personal
&lt;span class="nb"&gt;cd&lt;/span&gt; personal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a virtual environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv env
activate virtual env
&lt;span class="nb"&gt;source&lt;/span&gt; env/bin/activate
deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install dependencies. More info can be found in &lt;a href="https://docs.getpelican.com/en/latest/install.html"&gt;Pelican's offical docs&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m pip install pelican
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that the directory and python environment is setup, initialize the project with Pelican files with the 'pelican-
quickstart' command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican-quickstart

yourproject/
├── content
│   └── &lt;span class="o"&gt;(&lt;/span&gt;pages&lt;span class="o"&gt;)&lt;/span&gt;
├── output
├── tasks.py
├── Makefile
├── pelicanconf.py       &lt;span class="c1"&gt;# Main settings file&lt;/span&gt;
└── publishconf.py       &lt;span class="c1"&gt;# Settings to use when ready to publish&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;initializing git&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git init

git remote add origin https://github.com/MY_PROFILE/MY_REPO.git
git checkout dev

git add .
git commit -m &lt;span class="s1"&gt;&amp;#39;Initialized Pelican&amp;#39;&lt;/span&gt;

git branch -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;choosing a theme&lt;/h2&gt;
&lt;p&gt;Pelican's themes allow you to get a site up and running quickly. Once you figure out how to get the pages organized so 
Pelican can find them, managing a website becomes much easier.&lt;/p&gt;
&lt;p&gt;Browsing throgh the available themes, the Pelican Blue theme really caught my eye due to its simplicity. The following 
pelicanconf and publishconf settings are used in the Pelican Blue theme. If you decide to use a different theme, 
different features may be available. Check out the theme's Github repo to see how to use the theme with your content.&lt;/p&gt;
&lt;p&gt;Pull the repo locally and use the path in pelicanconf.py.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /Projects/github_pages
mkdir themes
&lt;span class="nb"&gt;cd&lt;/span&gt; themes
git clone https://github.com/ethan-king/pelican-blue.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;setup using pelicanconf.py&lt;/h2&gt;
&lt;p&gt;This is the main settings file, and where we can understand what's going on in Pelican. This is where we can tell 
Pelican where our content is, what theme to use, social media info, etc.&lt;/p&gt;
&lt;p&gt;pelicanconf.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/Documents/Projects/github_pages/themes/pelican-blue&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;linkedin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.linkedin.com/in/username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://twitter.com/username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SIDEBAR_DIGEST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Programmer and Web Developer&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;FAVICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;url-to-favicon&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_PAGES_ON_MENU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;TWITTER_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;twitter-user-name&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Blog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This flag will tell pelican to look in the /content/pages directory and display any .md or .rst document as a menu link. 
I'll use this for an 'about' page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;DISPLAY_PAGES_ON_MENU = True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;cd content&lt;/span&gt;
&lt;span class="err"&gt;mkdir pages&lt;/span&gt;
&lt;span class="err"&gt;cd pages&lt;/span&gt;
&lt;span class="err"&gt;touch about.md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open the about page in your editor of choice.&lt;/p&gt;
&lt;p&gt;Below are metadata that Pelican needs for content. See more &lt;a href="https://docs.getpelican.com/en/latest/content.html#file-metadata"&gt;Pelican Metadata&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;publishing&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;world&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ethan&lt;/span&gt; &lt;span class="n"&gt;King&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you're ready to view current changes, test the website locally by running the dev server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make devserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;navigate to http://localhost:8000/&lt;/p&gt;
&lt;h2&gt;Setup Github Pages&lt;/h2&gt;
&lt;p&gt;To serve a static site on github, go to your repo and click on settings. Under the main 'options' tab, scroll down 
to the github pages settings and select the branch that will host the site. In this case , 'Main'.&lt;/p&gt;
&lt;p&gt;&lt;img alt="github pages settings" src="https://ethan-king.github.io/images/ghp_settings.png" title="github pages settings"&gt;&lt;/p&gt;
&lt;h2&gt;setup using publishconf.py&lt;/h2&gt;
&lt;p&gt;publishconf.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://your-domain-address&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Blog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Push changes to the main branch and to the github remote repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make github
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the website is live! 
https://ethan-king.github.io/&lt;/p&gt;</content><category term="Python"></category><category term="pelican"></category><category term="publishing"></category><category term="github"></category><category term="markdown"></category></entry></feed>